<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Express PostgreSQL Example</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <script src="/js/jquery.js"></script>
  <script src="/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    .carousel-control-prev,
    .carousel-control-next {
      border: none;
      background-color: transparent;
    }

    .carousel-control-prev:hover,
    .carousel-control-next:hover {
      background-color: transparent;
    }

    .btn-primary {
      background-color: #397359;
    }

    .button:focus-visible {
      outline: none;
    }

    .navbar-toggler {
      outline: none;
    }

    @media (max-width: 768px) {
      .navbar-toggler {
        margin-left: auto;
        margin-top: 0px;

      }
    }


    p {
      margin: 30px;
    }

    .your-div {
      /* Set the image URL in the 'url()' function */
      background-image: url('assets/emergingtech_.png');
      /* Assuming the images folder is in the same directory as your HTML file */

      /* Set background size to cover the entire div */
      background-size: cover;

      /* Set background repeat to 'no-repeat' to avoid repetition */
      background-repeat: no-repeat;

      color: white;
      text-align: center;
      padding: 50px;

    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      margin-bottom: 20px;
      border: 2px solid #ffffff;
      /* Set a border color and width */
    }

    /* Add a new style to limit the height of the table */
    .table-container {
      max-height: 70vh;
      /* Adjust the value as needed */
      overflow-y: auto;
    }

    #search-form {
      margin: 20px;
      /* Adjust the margin as needed */
    }

    #search-input {
      padding: 10px;
      width: 200px;
      /* Adjust the width as needed */
    }

    #search-results {
      margin-top: 20px;
    }

    table {
      width: 78%;
      border-collapse: collapse;
      margin-top: 20px;
      margin-bottom: 20px;
      border: 2px solid 0#ffffff;
      table-layout: auto;
    }

    th,
    td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    th {
      /* background-color:#9f9f9f; */
      color: rgb(7, 39, 7);
      /* Set text color for header cells */
    }

    tr:hover {
      background-color: #f5f5f5;
    }

    .table-container {
      overflow-x: auto;
      /* Add this to allow horizontal scrolling if needed */
      overflow-y: hidden;
      /* Adjust the value as needed */

    }

    @media (max-width: 768px) {
      .navbar-brand {
        width: 80%;
      }
    }
  </style>

</head>

<body>
  <nav class="navbar navbar-light light-blue lighten-4">

    <!-- Navbar brand -->
    <a class="navbar-brand" href="/">
      <img src="/assets/fulllogo.png" alt="Logo" width="50%" height=auto class="d-inline-block align-text-top">
    </a>
    <!-- Collapse button -->

    <!-- Collapsible content -->

  </nav>
  <div class="your-div">
    <!-- Content goes here -->
    <h1>Departmental Nodal Officers</h1>
  </div>
  <center>
    <!-- <p style="width: 50%; align-items: center; color: cadetblue;">
      ET Cadres are Responsible for researching, assessing, and developing emerging technologies for use within the department. The group typically consists of experts from different departments. They drive the emerging technology activities in the department. The cadres also play an important role in educating and informing the department leadership and employees about emerging technologies.
   </p> -->
    <form id="search-form">
      <input type="text" id="search-input" placeholder="Search..." oninput="filterTables()">
    </form>
    <% const departments={}; %>

      <% data.forEach(item=> {
        const departmentName = item.a;

        if (!departments[departmentName]) {
        departments[departmentName] = [];
        }

        departments[departmentName].push(item);
        }); %>

        <% Object.keys(departments).forEach(departmentName=> { %>
          <div class="table-container">
            <h2>
              <%= departmentName %>
            </h2>
            <table class="data-table">
              <tr class="header-row">
                <th>Sub Department/Directorate/PSU</th>
                <th>Nodal Officer Name</th>
                <th>Designation</th>
                <th>Official Mail ID</th>
                <th>Mobile No</th>
                <th>HoD</th>
                <th>HoD Mail id</th>
                <th>HoD Contact Number</th>
              </tr>
              <% departments[departmentName].forEach(item=> { %>
                <tr>
                  <td>
                    <%= item.b %>
                  </td>
                  <td>
                    <%= item.c %>
                  </td>
                  <td>
                    <%= item.d %>
                  </td>
                  <td>
                    <%= item.e %>
                  </td>
                  <td>
                    <%= item.f %>
                  </td>
                  <td>
                    <%= item.g %>
                  </td>
                  <td>
                    <%= item.h %>
                  </td>
                  <td>
                    <%= item.i %>
                  </td>
                </tr>
                <% }); %>
            </table>
          </div>
          <% }); %>
  </center>
  <!-- Add this script at the end of your HTML file or in the head section -->
<script>
  function filterTables() {
    // Get the search input value
    var searchInput = document.getElementById('search-input').value.toLowerCase();

    // Get all the table containers
    var tableContainers = document.querySelectorAll('.table-container');

    // Loop through each table container and hide/show based on the search input
    tableContainers.forEach(function(tableContainer) {
      var rows = tableContainer.querySelectorAll('.data-table tr');
      var containerFound = false;

      // Loop through each row and hide/show based on the search input
      rows.forEach(function(row) {
        if (!row.classList.contains('header-row')) {
          var cells = row.getElementsByTagName('td');
          var found = false;

          // Check if any cell in the row contains the search input
          for (var i = 0; i < cells.length; i++) {
            var cellText = cells[i].textContent || cells[i].innerText;
            if (cellText.toLowerCase().indexOf(searchInput) > -1) {
              found = true;
              containerFound = true; // At least one matching row found in this container
              break;
            }
          }

          // Hide or show the row based on the search result
          if (found) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        }
      });

      // Hide or show the entire table container based on the search result
      if (containerFound) {
        tableContainer.style.display = '';
      } else {
        tableContainer.style.display = 'none';
      }
    });
  }
</script>







</body>

</html>